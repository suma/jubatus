def options(ctx): pass

def configure(ctx): pass

def build(bld):
  source = [
      'recommender_base.cpp',
      'recommender_mock.cpp',
      'recommender_mock_storage.cpp',
      'recommender_mock_util.cpp',
      'inverted_index.cpp',
      'minhash.cpp',
      'lsh.cpp',
      'lsh_util.cpp',
      'euclid_lsh.cpp',
      ]
  header = [
      'recommender_base.hpp',
      'recommender_type.hpp',
      'recommender.hpp',
      'euclid_lsh.hpp',
      'inverted_index.hpp',
      'lsh.hpp',
      'lsh_util.hpp',
      'minhash.hpp',
      ]
  bld.core_sources.extend(bld.add_prefix(source))
  bld.core_headers.extend(bld.add_prefix(header))

  def make_test(s):
    bld.program(
      features = 'gtest',
      source = s,
      target = s[0:s.rfind('.')],
      includes = '.',
      use = 'PFICOMMON MSGPACK jubatus_core')

  map(make_test, [
      'recommender_base_test.cpp',
      'recommender_mock_storage_test.cpp',
      'recommender_mock_test.cpp',
      'recommender_random_test.cpp',
      'lsh_util_test.cpp',
      'euclid_lsh_test.cpp',
      ])
